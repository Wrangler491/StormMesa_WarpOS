#ifndef _INCLUDE_AGL_H
#define _INCLUDE_AGL_H

/*
 * File generated by StormLink from Work2:Mesa3/Mesa-3.0/src/AMIGA/src/agl_lib.fd
 * DO NOT EDIT
 * $VER: agl.library 2.0 (04-Feb-99)
 */
#ifdef __cplusplus
extern "C" {
#endif
#pragma amicall(glBase, 0x1e, registerGL(a0))
#pragma amicall(glBase, 0x24, AmigaMesaCreateContext(a0))
#pragma amicall(glBase, 0x2a, AmigaMesaDestroyContext(a0))
#pragma amicall(glBase, 0x30, AmigaMesaCreateVisual(a0))
#pragma amicall(glBase, 0x36, AmigaMesaDestroyVisual(a0))
#pragma amicall(glBase, 0x3c, AmigaMesaMakeCurrent(a0, a1))
#pragma amicall(glBase, 0x42, AmigaMesaSwapBuffers(a0))
#pragma amicall(glBase, 0x48, AmigaMesaSetOneColor(a0, d0, fp0, fp1, fp2))
#pragma amicall(glBase, 0x4e, AmigaMesaSetRast(a0, a1))
#pragma amicall(glBase, 0x54, AmigaMesaGetConfig(a0, d0, a1))
#pragma amicall(glBase, 0x5a, Dummy_at_90())
#pragma amicall(glBase, 0x60, Dummy_at_96())
#pragma amicall(glBase, 0x66, Dummy_at_102())
#pragma amicall(glBase, 0x6c, Dummy_at_108())
#pragma amicall(glBase, 0x72, Dummy_at_114())
#pragma amicall(glBase, 0x78, Dummy_at_120())
#pragma amicall(glBase, 0x7e, Dummy_at_126())
#pragma amicall(glBase, 0x84, Dummy_at_132())
#pragma amicall(glBase, 0x8a, Dummy_at_138())
#pragma amicall(glBase, 0x90, Dummy_at_144())
#pragma amicall(glBase, 0x96, Dummy_at_150())
#pragma amicall(glBase, 0x9c, Dummy_at_156())
#pragma amicall(glBase, 0xa2, Dummy_at_162())
#pragma amicall(glBase, 0xa8, Dummy_at_168())
#pragma amicall(glBase, 0xae, Dummy_at_174())
#pragma amicall(glBase, 0xb4, smglClearIndex(fp0))
#pragma amicall(glBase, 0xba, smglClearColor(fp0, fp1, fp2, fp3))
#pragma amicall(glBase, 0xc0, smglClear(d0))
#pragma amicall(glBase, 0xc6, smglIndexMask(d0))
#pragma amicall(glBase, 0xcc, smglColorMask(d0, d1, d2, d3))
#pragma amicall(glBase, 0xd2, smglAlphaFunc(d0, fp0))
#pragma amicall(glBase, 0xd8, smglBlendFunc(d0, d1))
#pragma amicall(glBase, 0xde, smglLogicOp(d0))
#pragma amicall(glBase, 0xe4, smglCullFace(d0))
#pragma amicall(glBase, 0xea, smglFrontFace(d0))
#pragma amicall(glBase, 0xf0, smglPointSize(fp0))
#pragma amicall(glBase, 0xf6, smglLineWidth(fp0))
#pragma amicall(glBase, 0xfc, smglLineStipple(d0, d1))
#pragma amicall(glBase, 0x102, smglPolygonMode(d0, d1))
#pragma amicall(glBase, 0x108, smglPolygonOffset(fp0, fp1))
#pragma amicall(glBase, 0x10e, smglPolygonStipple(a0))
#pragma amicall(glBase, 0x114, smglGetPolygonStipple(a0))
#pragma amicall(glBase, 0x11a, smglEdgeFlag(d0))
#pragma amicall(glBase, 0x120, smglEdgeFlagv(a0))
#pragma amicall(glBase, 0x126, smglScissor(d0, d1, d2, d3))
#pragma amicall(glBase, 0x12c, smglClipPlane(d0, a0))
#pragma amicall(glBase, 0x132, smglGetClipPlane(d0, a0))
#pragma amicall(glBase, 0x138, smglDrawBuffer(d0))
#pragma amicall(glBase, 0x13e, smglReadBuffer(d0))
#pragma amicall(glBase, 0x144, smglEnable(d0))
#pragma amicall(glBase, 0x14a, smglDisable(d0))
#pragma amicall(glBase, 0x150, smglIsEnabled(d0))
#pragma amicall(glBase, 0x156, smglEnableClientState(d0))
#pragma amicall(glBase, 0x15c, smglDisableClientState(d0))
#pragma amicall(glBase, 0x162, smglGetBooleanv(d0, a0))
#pragma amicall(glBase, 0x168, smglGetDoublev(d0, a0))
#pragma amicall(glBase, 0x16e, smglGetFloatv(d0, a0))
#pragma amicall(glBase, 0x174, smglGetIntegerv(d0, a0))
#pragma amicall(glBase, 0x17a, smglPushAttrib(d0))
#pragma amicall(glBase, 0x180, smglPopAttrib())
#pragma amicall(glBase, 0x186, smglPushClientAttrib(d0))
#pragma amicall(glBase, 0x18c, smglPopClientAttrib())
#pragma amicall(glBase, 0x192, smglRenderMode(d0))
#pragma amicall(glBase, 0x198, smglGetError())
#pragma amicall(glBase, 0x19e, smglGetString(d0))
#pragma amicall(glBase, 0x1a4, smglFinish())
#pragma amicall(glBase, 0x1aa, smglFlush())
#pragma amicall(glBase, 0x1b0, smglHint(d0, d1))
#pragma amicall(glBase, 0x1b6, smglClearDepth(fp0))
#pragma amicall(glBase, 0x1bc, smglDepthFunc(d0))
#pragma amicall(glBase, 0x1c2, smglDepthMask(d0))
#pragma amicall(glBase, 0x1c8, smglDepthRange(fp0, fp1))
#pragma amicall(glBase, 0x1ce, smglClearAccum(fp0, fp1, fp2, fp3))
#pragma amicall(glBase, 0x1d4, smglAccum(d0, fp0))
#pragma amicall(glBase, 0x1da, smglMatrixMode(d0))
#pragma amicall(glBase, 0x1e0, smglOrtho(fp0, fp1, fp2, fp3, fp4, fp5))
#pragma amicall(glBase, 0x1e6, smglFrustum(fp0, fp1, fp2, fp3, fp4, fp5))
#pragma amicall(glBase, 0x1ec, smglViewport(d0, d1, d2, d3))
#pragma amicall(glBase, 0x1f2, smglPushMatrix())
#pragma amicall(glBase, 0x1f8, smglPopMatrix())
#pragma amicall(glBase, 0x1fe, smglLoadIdentity())
#pragma amicall(glBase, 0x204, smglLoadMatrixd(a0))
#pragma amicall(glBase, 0x20a, smglLoadMatrixf(a0))
#pragma amicall(glBase, 0x210, smglMultMatrixd(a0))
#pragma amicall(glBase, 0x216, smglMultMatrixf(a0))
#pragma amicall(glBase, 0x21c, smglRotated(fp0, fp1, fp2, fp3))
#pragma amicall(glBase, 0x222, smglRotatef(fp0, fp1, fp2, fp3))
#pragma amicall(glBase, 0x228, smglScaled(fp0, fp1, fp2))
#pragma amicall(glBase, 0x22e, smglScalef(fp0, fp1, fp2))
#pragma amicall(glBase, 0x234, smglTranslated(fp0, fp1, fp2))
#pragma amicall(glBase, 0x23a, smglTranslatef(fp0, fp1, fp2))
#pragma amicall(glBase, 0x240, smglIsList(d0))
#pragma amicall(glBase, 0x246, smglDeleteLists(d0, d1))
#pragma amicall(glBase, 0x24c, smglGenLists(d0))
#pragma amicall(glBase, 0x252, smglNewList(d0, d1))
#pragma amicall(glBase, 0x258, smglEndList())
#pragma amicall(glBase, 0x25e, smglCallList(d0))
#pragma amicall(glBase, 0x264, smglCallLists(d0, d1, a0))
#pragma amicall(glBase, 0x26a, smglListBase(d0))
#pragma amicall(glBase, 0x270, smglBegin(d0))
#pragma amicall(glBase, 0x276, smglEnd())
#pragma amicall(glBase, 0x27c, smglVertex2d(fp0, fp1))
#pragma amicall(glBase, 0x282, smglVertex2f(fp0, fp1))
#pragma amicall(glBase, 0x288, smglVertex2i(d0, d1))
#pragma amicall(glBase, 0x28e, smglVertex2s(d0, d1))
#pragma amicall(glBase, 0x294, smglVertex3d(fp0, fp1, fp2))
#pragma amicall(glBase, 0x29a, smglVertex3f(fp0, fp1, fp2))
#pragma amicall(glBase, 0x2a0, smglVertex3i(d0, d1, d2))
#pragma amicall(glBase, 0x2a6, smglVertex3s(d0, d1, d2))
#pragma amicall(glBase, 0x2ac, smglVertex4d(fp0, fp1, fp2, fp3))
#pragma amicall(glBase, 0x2b2, smglVertex4f(fp0, fp1, fp2, fp3))
#pragma amicall(glBase, 0x2b8, smglVertex4i(d0, d1, d2, d3))
#pragma amicall(glBase, 0x2be, smglVertex4s(d0, d1, d2, d3))
#pragma amicall(glBase, 0x2c4, smglVertex2dv(a0))
#pragma amicall(glBase, 0x2ca, smglVertex2fv(a0))
#pragma amicall(glBase, 0x2d0, smglVertex2iv(a0))
#pragma amicall(glBase, 0x2d6, smglVertex2sv(a0))
#pragma amicall(glBase, 0x2dc, smglVertex3dv(a0))
#pragma amicall(glBase, 0x2e2, smglVertex3fv(a0))
#pragma amicall(glBase, 0x2e8, smglVertex3iv(a0))
#pragma amicall(glBase, 0x2ee, smglVertex3sv(a0))
#pragma amicall(glBase, 0x2f4, smglVertex4dv(a0))
#pragma amicall(glBase, 0x2fa, smglVertex4fv(a0))
#pragma amicall(glBase, 0x300, smglVertex4iv(a0))
#pragma amicall(glBase, 0x306, smglVertex4sv(a0))
#pragma amicall(glBase, 0x30c, smglNormal3b(d0, d1, d2))
#pragma amicall(glBase, 0x312, smglNormal3d(fp0, fp1, fp2))
#pragma amicall(glBase, 0x318, smglNormal3f(fp0, fp1, fp2))
#pragma amicall(glBase, 0x31e, smglNormal3i(d0, d1, d2))
#pragma amicall(glBase, 0x324, smglNormal3s(d0, d1, d2))
#pragma amicall(glBase, 0x32a, smglNormal3bv(a0))
#pragma amicall(glBase, 0x330, smglNormal3dv(a0))
#pragma amicall(glBase, 0x336, smglNormal3fv(a0))
#pragma amicall(glBase, 0x33c, smglNormal3iv(a0))
#pragma amicall(glBase, 0x342, smglNormal3sv(a0))
#pragma amicall(glBase, 0x348, smglIndexd(fp0))
#pragma amicall(glBase, 0x34e, smglIndexf(fp0))
#pragma amicall(glBase, 0x354, smglIndexi(d0))
#pragma amicall(glBase, 0x35a, smglIndexs(d0))
#pragma amicall(glBase, 0x360, smglIndexub(d0))
#pragma amicall(glBase, 0x366, smglIndexdv(a0))
#pragma amicall(glBase, 0x36c, smglIndexfv(a0))
#pragma amicall(glBase, 0x372, smglIndexiv(a0))
#pragma amicall(glBase, 0x378, smglIndexsv(a0))
#pragma amicall(glBase, 0x37e, smglIndexubv(a0))
#pragma amicall(glBase, 0x384, smglColor3b(d0, d1, d2))
#pragma amicall(glBase, 0x38a, smglColor3d(fp0, fp1, fp2))
#pragma amicall(glBase, 0x390, smglColor3f(fp0, fp1, fp2))
#pragma amicall(glBase, 0x396, smglColor3i(d0, d1, d2))
#pragma amicall(glBase, 0x39c, smglColor3s(d0, d1, d2))
#pragma amicall(glBase, 0x3a2, smglColor3ub(d0, d1, d2))
#pragma amicall(glBase, 0x3a8, smglColor3ui(d0, d1, d2))
#pragma amicall(glBase, 0x3ae, smglColor3us(d0, d1, d2))
#pragma amicall(glBase, 0x3b4, smglColor4b(d0, d1, d2, d3))
#pragma amicall(glBase, 0x3ba, smglColor4d(fp0, fp1, fp2, fp3))
#pragma amicall(glBase, 0x3c0, smglColor4f(fp0, fp1, fp2, fp3))
#pragma amicall(glBase, 0x3c6, smglColor4i(d0, d1, d2, d3))
#pragma amicall(glBase, 0x3cc, smglColor4s(d0, d1, d2, d3))
#pragma amicall(glBase, 0x3d2, smglColor4ub(d0, d1, d2, d3))
#pragma amicall(glBase, 0x3d8, smglColor4ui(d0, d1, d2, d3))
#pragma amicall(glBase, 0x3de, smglColor4us(d0, d1, d2, d3))
#pragma amicall(glBase, 0x3e4, smglColor3bv(a0))
#pragma amicall(glBase, 0x3ea, smglColor3dv(a0))
#pragma amicall(glBase, 0x3f0, smglColor3fv(a0))
#pragma amicall(glBase, 0x3f6, smglColor3iv(a0))
#pragma amicall(glBase, 0x3fc, smglColor3sv(a0))
#pragma amicall(glBase, 0x402, smglColor3ubv(a0))
#pragma amicall(glBase, 0x408, smglColor3uiv(a0))
#pragma amicall(glBase, 0x40e, smglColor3usv(a0))
#pragma amicall(glBase, 0x414, smglColor4bv(a0))
#pragma amicall(glBase, 0x41a, smglColor4dv(a0))
#pragma amicall(glBase, 0x420, smglColor4fv(a0))
#pragma amicall(glBase, 0x426, smglColor4iv(a0))
#pragma amicall(glBase, 0x42c, smglColor4sv(a0))
#pragma amicall(glBase, 0x432, smglColor4ubv(a0))
#pragma amicall(glBase, 0x438, smglColor4uiv(a0))
#pragma amicall(glBase, 0x43e, smglColor4usv(a0))
#pragma amicall(glBase, 0x444, smglTexCoord1d(fp0))
#pragma amicall(glBase, 0x44a, smglTexCoord1f(fp0))
#pragma amicall(glBase, 0x450, smglTexCoord1i(d0))
#pragma amicall(glBase, 0x456, smglTexCoord1s(d0))
#pragma amicall(glBase, 0x45c, smglTexCoord2d(fp0, fp1))
#pragma amicall(glBase, 0x462, smglTexCoord2f(fp0, fp1))
#pragma amicall(glBase, 0x468, smglTexCoord2i(d0, d1))
#pragma amicall(glBase, 0x46e, smglTexCoord2s(d0, d1))
#pragma amicall(glBase, 0x474, smglTexCoord3d(fp0, fp1, fp2))
#pragma amicall(glBase, 0x47a, smglTexCoord3f(fp0, fp1, fp2))
#pragma amicall(glBase, 0x480, smglTexCoord3i(d0, d1, d2))
#pragma amicall(glBase, 0x486, smglTexCoord3s(d0, d1, d2))
#pragma amicall(glBase, 0x48c, smglTexCoord4d(fp0, fp1, fp2, fp3))
#pragma amicall(glBase, 0x492, smglTexCoord4f(fp0, fp1, fp2, fp3))
#pragma amicall(glBase, 0x498, smglTexCoord4i(d0, d1, d2, d3))
#pragma amicall(glBase, 0x49e, smglTexCoord4s(d0, d1, d2, d3))
#pragma amicall(glBase, 0x4a4, smglTexCoord1dv(a0))
#pragma amicall(glBase, 0x4aa, smglTexCoord1fv(a0))
#pragma amicall(glBase, 0x4b0, smglTexCoord1iv(a0))
#pragma amicall(glBase, 0x4b6, smglTexCoord1sv(a0))
#pragma amicall(glBase, 0x4bc, smglTexCoord2dv(a0))
#pragma amicall(glBase, 0x4c2, smglTexCoord2fv(a0))
#pragma amicall(glBase, 0x4c8, smglTexCoord2iv(a0))
#pragma amicall(glBase, 0x4ce, smglTexCoord2sv(a0))
#pragma amicall(glBase, 0x4d4, smglTexCoord3dv(a0))
#pragma amicall(glBase, 0x4da, smglTexCoord3fv(a0))
#pragma amicall(glBase, 0x4e0, smglTexCoord3iv(a0))
#pragma amicall(glBase, 0x4e6, smglTexCoord3sv(a0))
#pragma amicall(glBase, 0x4ec, smglTexCoord4dv(a0))
#pragma amicall(glBase, 0x4f2, smglTexCoord4fv(a0))
#pragma amicall(glBase, 0x4f8, smglTexCoord4iv(a0))
#pragma amicall(glBase, 0x4fe, smglTexCoord4sv(a0))
#pragma amicall(glBase, 0x504, smglRasterPos2d(fp0, fp1))
#pragma amicall(glBase, 0x50a, smglRasterPos2f(fp0, fp1))
#pragma amicall(glBase, 0x510, smglRasterPos2i(d0, d1))
#pragma amicall(glBase, 0x516, smglRasterPos2s(d0, d1))
#pragma amicall(glBase, 0x51c, smglRasterPos3d(fp0, fp1, fp2))
#pragma amicall(glBase, 0x522, smglRasterPos3f(fp0, fp1, fp2))
#pragma amicall(glBase, 0x528, smglRasterPos3i(d0, d1, d2))
#pragma amicall(glBase, 0x52e, smglRasterPos3s(d0, d1, d2))
#pragma amicall(glBase, 0x534, smglRasterPos4d(fp0, fp1, fp2, fp3))
#pragma amicall(glBase, 0x53a, smglRasterPos4f(fp0, fp1, fp2, fp3))
#pragma amicall(glBase, 0x540, smglRasterPos4i(d0, d1, d2, d3))
#pragma amicall(glBase, 0x546, smglRasterPos4s(d0, d1, d2, d3))
#pragma amicall(glBase, 0x54c, smglRasterPos2dv(a0))
#pragma amicall(glBase, 0x552, smglRasterPos2fv(a0))
#pragma amicall(glBase, 0x558, smglRasterPos2iv(a0))
#pragma amicall(glBase, 0x55e, smglRasterPos2sv(a0))
#pragma amicall(glBase, 0x564, smglRasterPos3dv(a0))
#pragma amicall(glBase, 0x56a, smglRasterPos3fv(a0))
#pragma amicall(glBase, 0x570, smglRasterPos3iv(a0))
#pragma amicall(glBase, 0x576, smglRasterPos3sv(a0))
#pragma amicall(glBase, 0x57c, smglRasterPos4dv(a0))
#pragma amicall(glBase, 0x582, smglRasterPos4fv(a0))
#pragma amicall(glBase, 0x588, smglRasterPos4iv(a0))
#pragma amicall(glBase, 0x58e, smglRasterPos4sv(a0))
#pragma amicall(glBase, 0x594, smglRectd(fp0, fp1, fp2, fp3))
#pragma amicall(glBase, 0x59a, smglRectf(fp0, fp1, fp2, fp3))
#pragma amicall(glBase, 0x5a0, smglRecti(d0, d1, d2, d3))
#pragma amicall(glBase, 0x5a6, smglRects(d0, d1, d2, d3))
#pragma amicall(glBase, 0x5ac, smglRectdv(a0, a1))
#pragma amicall(glBase, 0x5b2, smglRectfv(a0, a1))
#pragma amicall(glBase, 0x5b8, smglRectiv(a0, a1))
#pragma amicall(glBase, 0x5be, smglRectsv(a0, a1))
#pragma amicall(glBase, 0x5c4, smglVertexPointer(d0, d1, d2, a0))
#pragma amicall(glBase, 0x5ca, smglNormalPointer(d0, d1, a0))
#pragma amicall(glBase, 0x5d0, smglColorPointer(d0, d1, d2, a0))
#pragma amicall(glBase, 0x5d6, smglIndexPointer(d0, d1, a0))
#pragma amicall(glBase, 0x5dc, smglTexCoordPointer(d0, d1, d2, a0))
#pragma amicall(glBase, 0x5e2, smglEdgeFlagPointer(d0, a0))
#pragma amicall(glBase, 0x5e8, smglGetPointerv(d0, a0))
#pragma amicall(glBase, 0x5ee, smglArrayElement(d0))
#pragma amicall(glBase, 0x5f4, smglDrawArrays(d0, d1, d2))
#pragma amicall(glBase, 0x5fa, smglDrawElements(d0, d1, d2, a0))
#pragma amicall(glBase, 0x600, smglInterleavedArrays(d0, d1, a0))
#pragma amicall(glBase, 0x606, smglShadeModel(d0))
#pragma amicall(glBase, 0x60c, smglLightf(d0, d1, fp0))
#pragma amicall(glBase, 0x612, smglLighti(d0, d1, d2))
#pragma amicall(glBase, 0x618, smglLightfv(d0, d1, a0))
#pragma amicall(glBase, 0x61e, smglLightiv(d0, d1, a0))
#pragma amicall(glBase, 0x624, smglGetLightfv(d0, d1, a0))
#pragma amicall(glBase, 0x62a, smglGetLightiv(d0, d1, a0))
#pragma amicall(glBase, 0x630, smglLightModelf(d0, fp0))
#pragma amicall(glBase, 0x636, smglLightModeli(d0, d1))
#pragma amicall(glBase, 0x63c, smglLightModelfv(d0, a0))
#pragma amicall(glBase, 0x642, smglLightModeliv(d0, a0))
#pragma amicall(glBase, 0x648, smglMaterialf(d0, d1, fp0))
#pragma amicall(glBase, 0x64e, smglMateriali(d0, d1, d2))
#pragma amicall(glBase, 0x654, smglMaterialfv(d0, d1, a0))
#pragma amicall(glBase, 0x65a, smglMaterialiv(d0, d1, a0))
#pragma amicall(glBase, 0x660, smglGetMaterialfv(d0, d1, a0))
#pragma amicall(glBase, 0x666, smglGetMaterialiv(d0, d1, a0))
#pragma amicall(glBase, 0x66c, smglColorMaterial(d0, d1))
#pragma amicall(glBase, 0x672, smglPixelZoom(fp0, fp1))
#pragma amicall(glBase, 0x678, smglPixelStoref(d0, fp0))
#pragma amicall(glBase, 0x67e, smglPixelStorei(d0, d1))
#pragma amicall(glBase, 0x684, smglPixelTransferf(d0, fp0))
#pragma amicall(glBase, 0x68a, smglPixelTransferi(d0, d1))
#pragma amicall(glBase, 0x690, smglPixelMapfv(d0, d1, a0))
#pragma amicall(glBase, 0x696, smglPixelMapuiv(d0, d1, a0))
#pragma amicall(glBase, 0x69c, smglPixelMapusv(d0, d1, a0))
#pragma amicall(glBase, 0x6a2, smglGetPixelMapfv(d0, a0))
#pragma amicall(glBase, 0x6a8, smglGetPixelMapuiv(d0, a0))
#pragma amicall(glBase, 0x6ae, smglGetPixelMapusv(d0, a0))
#pragma amicall(glBase, 0x6b4, smglBitmap(d0, d1, fp0, fp1, fp2, fp3, a0))
#pragma amicall(glBase, 0x6ba, smglReadPixels(d0, d1, d2, d3, d4, d5, a0))
#pragma amicall(glBase, 0x6c0, smglDrawPixels(d0, d1, d2, d3, a0))
#pragma amicall(glBase, 0x6c6, smglCopyPixels(d0, d1, d2, d3, d4))
#pragma amicall(glBase, 0x6cc, smglStencilFunc(d0, d1, d2))
#pragma amicall(glBase, 0x6d2, smglStencilMask(d0))
#pragma amicall(glBase, 0x6d8, smglStencilOp(d0, d1, d2))
#pragma amicall(glBase, 0x6de, smglClearStencil(d0))
#pragma amicall(glBase, 0x6e4, smglTexGend(d0, d1, fp0))
#pragma amicall(glBase, 0x6ea, smglTexGenf(d0, d1, fp0))
#pragma amicall(glBase, 0x6f0, smglTexGeni(d0, d1, d2))
#pragma amicall(glBase, 0x6f6, smglTexGendv(d0, d1, a0))
#pragma amicall(glBase, 0x6fc, smglTexGenfv(d0, d1, a0))
#pragma amicall(glBase, 0x702, smglTexGeniv(d0, d1, a0))
#pragma amicall(glBase, 0x708, smglGetTexGendv(d0, d1, a0))
#pragma amicall(glBase, 0x70e, smglGetTexGenfv(d0, d1, a0))
#pragma amicall(glBase, 0x714, smglGetTexGeniv(d0, d1, a0))
#pragma amicall(glBase, 0x71a, smglTexEnvf(d0, d1, fp0))
#pragma amicall(glBase, 0x720, smglTexEnvi(d0, d1, d2))
#pragma amicall(glBase, 0x726, smglTexEnvfv(d0, d1, a0))
#pragma amicall(glBase, 0x72c, smglTexEnviv(d0, d1, a0))
#pragma amicall(glBase, 0x732, smglGetTexEnvfv(d0, d1, a0))
#pragma amicall(glBase, 0x738, smglGetTexEnviv(d0, d1, a0))
#pragma amicall(glBase, 0x73e, smglTexParameterf(d0, d1, fp0))
#pragma amicall(glBase, 0x744, smglTexParameteri(d0, d1, d2))
#pragma amicall(glBase, 0x74a, smglTexParameterfv(d0, d1, a0))
#pragma amicall(glBase, 0x750, smglTexParameteriv(d0, d1, a0))
#pragma amicall(glBase, 0x756, smglGetTexParameterfv(d0, d1, a0))
#pragma amicall(glBase, 0x75c, smglGetTexParameteriv(d0, d1, a0))
#pragma amicall(glBase, 0x762, smglGetTexLevelParameterfv(d0, d1, d2, a0))
#pragma amicall(glBase, 0x768, smglGetTexLevelParameteriv(d0, d1, d2, a0))
#pragma amicall(glBase, 0x76e, smglTexImage1D(d0, d1, d2, d3, d4, d5, d6, a0))
#pragma amicall(glBase, 0x774, smglTexImage2D(d0, d1, d2, d3, d4, d5, d6, d7, a0))
#pragma amicall(glBase, 0x77a, smglGetTexImage(d0, d1, d2, d3, a0))
#pragma amicall(glBase, 0x780, smglGenTextures(d0, a0))
#pragma amicall(glBase, 0x786, smglDeleteTextures(d0, a0))
#pragma amicall(glBase, 0x78c, smglBindTexture(d0, d1))
#pragma amicall(glBase, 0x792, smglPrioritizeTextures(d0, a0, a1))
#pragma amicall(glBase, 0x798, smglAreTexturesResident(d0, a0, a1))
#pragma amicall(glBase, 0x79e, smglIsTexture(d0))
#pragma amicall(glBase, 0x7a4, smglTexSubImage1D(d0, d1, d2, d3, d4, d5, a0))
#pragma amicall(glBase, 0x7aa, smglTexSubImage2D(d0, d1, d2, d3, d4, d5, d6, d7, a0))
#pragma amicall(glBase, 0x7b0, smglCopyTexImage1D(d0, d1, d2, d3, d4, d5, d6))
#pragma amicall(glBase, 0x7b6, smglCopyTexImage2D(d0, d1, d2, d3, d4, d5, d6, d7))
#pragma amicall(glBase, 0x7bc, smglCopyTexSubImage1D(d0, d1, d2, d3, d4, d5))
#pragma amicall(glBase, 0x7c2, smglCopyTexSubImage2D(d0, d1, d2, d3, d4, d5, d6, d7))
#pragma amicall(glBase, 0x7c8, smglMap1d(d0, fp0, fp1, d1, d2, a0))
#pragma amicall(glBase, 0x7ce, smglMap1f(d0, fp0, fp1, d1, d2, a0))
#pragma amicall(glBase, 0x7d4, smglMap2d(d0, fp0, fp1, d1, d2, fp2, fp3, d3, d4, a0))
#pragma amicall(glBase, 0x7da, smglMap2f(d0, fp0, fp1, d1, d2, fp2, fp3, d3, d4, a0))
#pragma amicall(glBase, 0x7e0, smglGetMapdv(d0, d1, a0))
#pragma amicall(glBase, 0x7e6, smglGetMapfv(d0, d1, a0))
#pragma amicall(glBase, 0x7ec, smglGetMapiv(d0, d1, a0))
#pragma amicall(glBase, 0x7f2, smglEvalCoord1d(fp0))
#pragma amicall(glBase, 0x7f8, smglEvalCoord1f(fp0))
#pragma amicall(glBase, 0x7fe, smglEvalCoord1dv(a0))
#pragma amicall(glBase, 0x804, smglEvalCoord1fv(a0))
#pragma amicall(glBase, 0x80a, smglEvalCoord2d(fp0, fp1))
#pragma amicall(glBase, 0x810, smglEvalCoord2f(fp0, fp1))
#pragma amicall(glBase, 0x816, smglEvalCoord2dv(a0))
#pragma amicall(glBase, 0x81c, smglEvalCoord2fv(a0))
#pragma amicall(glBase, 0x822, smglMapGrid1d(d0, fp0, fp1))
#pragma amicall(glBase, 0x828, smglMapGrid1f(d0, fp0, fp1))
#pragma amicall(glBase, 0x82e, smglMapGrid2d(d0, fp0, fp1, d1, fp2, fp3))
#pragma amicall(glBase, 0x834, smglMapGrid2f(d0, fp0, fp1, d1, fp2, fp3))
#pragma amicall(glBase, 0x83a, smglEvalPoint1(d0))
#pragma amicall(glBase, 0x840, smglEvalPoint2(d0, d1))
#pragma amicall(glBase, 0x846, smglEvalMesh1(d0, d1, d2))
#pragma amicall(glBase, 0x84c, smglEvalMesh2(d0, d1, d2, d3, d4))
#pragma amicall(glBase, 0x852, smglFogf(d0, fp0))
#pragma amicall(glBase, 0x858, smglFogi(d0, d1))
#pragma amicall(glBase, 0x85e, smglFogfv(d0, a0))
#pragma amicall(glBase, 0x864, smglFogiv(d0, a0))
#pragma amicall(glBase, 0x86a, smglFeedbackBuffer(d0, d1, a0))
#pragma amicall(glBase, 0x870, smglPassThrough(fp0))
#pragma amicall(glBase, 0x876, smglSelectBuffer(d0, a0))
#pragma amicall(glBase, 0x87c, smglInitNames())
#pragma amicall(glBase, 0x882, smglLoadName(d0))
#pragma amicall(glBase, 0x888, smglPushName(d0))
#pragma amicall(glBase, 0x88e, smglPopName())
#pragma amicall(glBase, 0x894, smglBlendEquationEXT(d0))
#pragma amicall(glBase, 0x89a, smglBlendColorEXT(fp0, fp1, fp2, fp3))
#pragma amicall(glBase, 0x8a0, smglPolygonOffsetEXT(fp0, fp1))
#pragma amicall(glBase, 0x8a6, smglVertexPointerEXT(d0, d1, d2, d3, a0))
#pragma amicall(glBase, 0x8ac, smglNormalPointerEXT(d0, d1, d2, a0))
#pragma amicall(glBase, 0x8b2, smglColorPointerEXT(d0, d1, d2, d3, a0))
#pragma amicall(glBase, 0x8b8, smglIndexPointerEXT(d0, d1, d2, a0))
#pragma amicall(glBase, 0x8be, smglTexCoordPointerEXT(d0, d1, d2, d3, a0))
#pragma amicall(glBase, 0x8c4, smglEdgeFlagPointerEXT(d0, d1, a0))
#pragma amicall(glBase, 0x8ca, smglGetPointervEXT(d0, a0))
#pragma amicall(glBase, 0x8d0, smglArrayElementEXT(d0))
#pragma amicall(glBase, 0x8d6, smglDrawArraysEXT(d0, d1, d2))
#pragma amicall(glBase, 0x8dc, smglGenTexturesEXT(d0, a0))
#pragma amicall(glBase, 0x8e2, smglDeleteTexturesEXT(d0, a0))
#pragma amicall(glBase, 0x8e8, smglBindTextureEXT(d0, d1))
#pragma amicall(glBase, 0x8ee, smglPrioritizeTexturesEXT(d0, a0, a1))
#pragma amicall(glBase, 0x8f4, smglAreTexturesResidentEXT(d0, a0, a1))
#pragma amicall(glBase, 0x8fa, smglIsTextureEXT(d0))
#pragma amicall(glBase, 0x900, smglTexImage3DEXT(d0, d1, d2, d3, d4, d5, d6, d7, a0, a1))
#pragma amicall(glBase, 0x906, smglTexSubImage3DEXT(d0, d1, d2, d3, d4, d5, d6, d7, a0, a1, a2))
#pragma amicall(glBase, 0x90c, smglCopyTexSubImage3DEXT(d0, d1, d2, d3, d4, d5, d6, d7, a0))
#pragma amicall(glBase, 0x912, smglColorTableEXT(d0, d1, d2, d3, d4, a0))
#pragma amicall(glBase, 0x918, smglColorSubTableEXT(d0, d1, d2, d3, d4, a0))
#pragma amicall(glBase, 0x91e, smglGetColorTableEXT(d0, d1, d2, a0))
#pragma amicall(glBase, 0x924, smglGetColorTableParameterfvEXT(d0, d1, a0))
#pragma amicall(glBase, 0x92a, smglGetColorTableParameterivEXT(d0, d1, a0))
#pragma amicall(glBase, 0x930, smglMultiTexCoord1dSGIS(d0, fp0))
#pragma amicall(glBase, 0x936, smglMultiTexCoord1dvSGIS(d0, a0))
#pragma amicall(glBase, 0x93c, smglMultiTexCoord1fSGIS(d0, fp0))
#pragma amicall(glBase, 0x942, smglMultiTexCoord1fvSGIS(d0, a0))
#pragma amicall(glBase, 0x948, smglMultiTexCoord1iSGIS(d0, d1))
#pragma amicall(glBase, 0x94e, smglMultiTexCoord1ivSGIS(d0, a0))
#pragma amicall(glBase, 0x954, smglMultiTexCoord1sSGIS(d0, d1))
#pragma amicall(glBase, 0x95a, smglMultiTexCoord1svSGIS(d0, a0))
#pragma amicall(glBase, 0x960, smglMultiTexCoord2dSGIS(d0, fp0, fp1))
#pragma amicall(glBase, 0x966, smglMultiTexCoord2dvSGIS(d0, a0))
#pragma amicall(glBase, 0x96c, smglMultiTexCoord2fSGIS(d0, fp0, fp1))
#pragma amicall(glBase, 0x972, smglMultiTexCoord2fvSGIS(d0, a0))
#pragma amicall(glBase, 0x978, smglMultiTexCoord2iSGIS(d0, d1, d2))
#pragma amicall(glBase, 0x97e, smglMultiTexCoord2ivSGIS(d0, a0))
#pragma amicall(glBase, 0x984, smglMultiTexCoord2sSGIS(d0, d1, d2))
#pragma amicall(glBase, 0x98a, smglMultiTexCoord2svSGIS(d0, a0))
#pragma amicall(glBase, 0x990, smglMultiTexCoord3dSGIS(d0, fp0, fp1, fp2))
#pragma amicall(glBase, 0x996, smglMultiTexCoord3dvSGIS(d0, a0))
#pragma amicall(glBase, 0x99c, smglMultiTexCoord3fSGIS(d0, fp0, fp1, fp2))
#pragma amicall(glBase, 0x9a2, smglMultiTexCoord3fvSGIS(d0, a0))
#pragma amicall(glBase, 0x9a8, smglMultiTexCoord3iSGIS(d0, d1, d2, d3))
#pragma amicall(glBase, 0x9ae, smglMultiTexCoord3ivSGIS(d0, a0))
#pragma amicall(glBase, 0x9b4, smglMultiTexCoord3sSGIS(d0, d1, d2, d3))
#pragma amicall(glBase, 0x9ba, smglMultiTexCoord3svSGIS(d0, a0))
#pragma amicall(glBase, 0x9c0, smglMultiTexCoord4dSGIS(d0, fp0, fp1, fp2, fp3))
#pragma amicall(glBase, 0x9c6, smglMultiTexCoord4dvSGIS(d0, a0))
#pragma amicall(glBase, 0x9cc, smglMultiTexCoord4fSGIS(d0, fp0, fp1, fp2, fp3))
#pragma amicall(glBase, 0x9d2, smglMultiTexCoord4fvSGIS(d0, a0))
#pragma amicall(glBase, 0x9d8, smglMultiTexCoord4iSGIS(d0, d1, d2, d3, d4))
#pragma amicall(glBase, 0x9de, smglMultiTexCoord4ivSGIS(d0, a0))
#pragma amicall(glBase, 0x9e4, smglMultiTexCoord4sSGIS(d0, d1, d2, d3, d4))
#pragma amicall(glBase, 0x9ea, smglMultiTexCoord4svSGIS(d0, a0))
#pragma amicall(glBase, 0x9f0, smglMultiTexCoordPointerSGIS(d0, d1, d2, d3, a0))
#pragma amicall(glBase, 0x9f6, smglSelectTextureSGIS(d0))
#pragma amicall(glBase, 0x9fc, smglSelectTextureCoordSetSGIS(d0))
#pragma amicall(glBase, 0xa02, smglMultiTexCoord1dEXT(d0, fp0))
#pragma amicall(glBase, 0xa08, smglMultiTexCoord1dvEXT(d0, a0))
#pragma amicall(glBase, 0xa0e, smglMultiTexCoord1fEXT(d0, fp0))
#pragma amicall(glBase, 0xa14, smglMultiTexCoord1fvEXT(d0, a0))
#pragma amicall(glBase, 0xa1a, smglMultiTexCoord1iEXT(d0, d1))
#pragma amicall(glBase, 0xa20, smglMultiTexCoord1ivEXT(d0, a0))
#pragma amicall(glBase, 0xa26, smglMultiTexCoord1sEXT(d0, d1))
#pragma amicall(glBase, 0xa2c, smglMultiTexCoord1svEXT(d0, a0))
#pragma amicall(glBase, 0xa32, smglMultiTexCoord2dEXT(d0, fp0, fp1))
#pragma amicall(glBase, 0xa38, smglMultiTexCoord2dvEXT(d0, a0))
#pragma amicall(glBase, 0xa3e, smglMultiTexCoord2fEXT(d0, fp0, fp1))
#pragma amicall(glBase, 0xa44, smglMultiTexCoord2fvEXT(d0, a0))
#pragma amicall(glBase, 0xa4a, smglMultiTexCoord2iEXT(d0, d1, d2))
#pragma amicall(glBase, 0xa50, smglMultiTexCoord2ivEXT(d0, a0))
#pragma amicall(glBase, 0xa56, smglMultiTexCoord2sEXT(d0, d1, d2))
#pragma amicall(glBase, 0xa5c, smglMultiTexCoord2svEXT(d0, a0))
#pragma amicall(glBase, 0xa62, smglMultiTexCoord3dEXT(d0, fp0, fp1, fp2))
#pragma amicall(glBase, 0xa68, smglMultiTexCoord3dvEXT(d0, a0))
#pragma amicall(glBase, 0xa6e, smglMultiTexCoord3fEXT(d0, fp0, fp1, fp2))
#pragma amicall(glBase, 0xa74, smglMultiTexCoord3fvEXT(d0, a0))
#pragma amicall(glBase, 0xa7a, smglMultiTexCoord3iEXT(d0, d1, d2, d3))
#pragma amicall(glBase, 0xa80, smglMultiTexCoord3ivEXT(d0, a0))
#pragma amicall(glBase, 0xa86, smglMultiTexCoord3sEXT(d0, d1, d2, d3))
#pragma amicall(glBase, 0xa8c, smglMultiTexCoord3svEXT(d0, a0))
#pragma amicall(glBase, 0xa92, smglMultiTexCoord4dEXT(d0, fp0, fp1, fp2, fp3))
#pragma amicall(glBase, 0xa98, smglMultiTexCoord4dvEXT(d0, a0))
#pragma amicall(glBase, 0xa9e, smglMultiTexCoord4fEXT(d0, fp0, fp1, fp2, fp3))
#pragma amicall(glBase, 0xaa4, smglMultiTexCoord4fvEXT(d0, a0))
#pragma amicall(glBase, 0xaaa, smglMultiTexCoord4iEXT(d0, d1, d2, d3, d4))
#pragma amicall(glBase, 0xab0, smglMultiTexCoord4ivEXT(d0, a0))
#pragma amicall(glBase, 0xab6, smglMultiTexCoord4sEXT(d0, d1, d2, d3, d4))
#pragma amicall(glBase, 0xabc, smglMultiTexCoord4svEXT(d0, a0))
#pragma amicall(glBase, 0xac2, smglInterleavedTextureCoordSetsEXT(d0))
#pragma amicall(glBase, 0xac8, smglSelectTextureEXT(d0))
#pragma amicall(glBase, 0xace, smglSelectTextureCoordSetEXT(d0))
#pragma amicall(glBase, 0xad4, smglSelectTextureTransformEXT(d0))
#pragma amicall(glBase, 0xada, smglPointParameterfEXT(d0, fp0))
#pragma amicall(glBase, 0xae0, smglPointParameterfvEXT(d0, a0))
#pragma amicall(glBase, 0xae6, smglWindowPos2iMESA(d0, d1))
#pragma amicall(glBase, 0xaec, smglWindowPos2sMESA(d0, d1))
#pragma amicall(glBase, 0xaf2, smglWindowPos2fMESA(fp0, fp1))
#pragma amicall(glBase, 0xaf8, smglWindowPos2dMESA(fp0, fp1))
#pragma amicall(glBase, 0xafe, smglWindowPos2ivMESA(a0))
#pragma amicall(glBase, 0xb04, smglWindowPos2svMESA(a0))
#pragma amicall(glBase, 0xb0a, smglWindowPos2fvMESA(a0))
#pragma amicall(glBase, 0xb10, smglWindowPos2dvMESA(a0))
#pragma amicall(glBase, 0xb16, smglWindowPos3iMESA(d0, d1, d2))
#pragma amicall(glBase, 0xb1c, smglWindowPos3sMESA(d0, d1, d2))
#pragma amicall(glBase, 0xb22, smglWindowPos3fMESA(fp0, fp1, fp2))
#pragma amicall(glBase, 0xb28, smglWindowPos3dMESA(fp0, fp1, fp2))
#pragma amicall(glBase, 0xb2e, smglWindowPos3ivMESA(a0))
#pragma amicall(glBase, 0xb34, smglWindowPos3svMESA(a0))
#pragma amicall(glBase, 0xb3a, smglWindowPos3fvMESA(a0))
#pragma amicall(glBase, 0xb40, smglWindowPos3dvMESA(a0))
#pragma amicall(glBase, 0xb46, smglWindowPos4iMESA(d0, d1, d2, d3))
#pragma amicall(glBase, 0xb4c, smglWindowPos4sMESA(d0, d1, d2, d3))
#pragma amicall(glBase, 0xb52, smglWindowPos4fMESA(fp0, fp1, fp2, fp3))
#pragma amicall(glBase, 0xb58, smglWindowPos4dMESA(fp0, fp1, fp2, fp3))
#pragma amicall(glBase, 0xb5e, smglWindowPos4ivMESA(a0))
#pragma amicall(glBase, 0xb64, smglWindowPos4svMESA(a0))
#pragma amicall(glBase, 0xb6a, smglWindowPos4fvMESA(a0))
#pragma amicall(glBase, 0xb70, smglWindowPos4dvMESA(a0))
#pragma amicall(glBase, 0xb76, smglResizeBuffersMESA())
#pragma amicall(glBase, 0xb7c, smglDrawRangeElements(d0, d1, d2, d3, d4, a0))
#pragma amicall(glBase, 0xb82, smglTexImage3D(d0, d1, d2, d3, d4, d5, d6, d7, a0, a1))
#pragma amicall(glBase, 0xb88, smglTexSubImage3D(d0, d1, d2, d3, d4, d5, d6, d7, a0, a1, a2))
#pragma amicall(glBase, 0xb8e, smglCopyTexSubImage3D(d0, d1, d2, d3, d4, d5, d6, d7, a0))
#ifdef __cplusplus
};
#endif
#endif
